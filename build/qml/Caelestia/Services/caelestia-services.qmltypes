import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "audioprovider.hpp"
        name: "caelestia::AudioProvider"
        accessSemantics: "reference"
        prototype: "caelestia::Service"
    }
    Component {
        file: "beattracker.hpp"
        name: "caelestia::BeatTracker"
        accessSemantics: "reference"
        prototype: "caelestia::AudioProvider"
        exports: ["Caelestia.Services/BeatTracker 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "bpm"
            type: "smpl_t"
            read: "bpm"
            notify: "bpmChanged"
            index: 0
            isReadonly: true
        }
        Signal { name: "bpmChanged" }
        Signal {
            name: "beat"
            Parameter { name: "bpm"; type: "smpl_t" }
        }
    }
    Component {
        file: "cavaprovider.hpp"
        name: "caelestia::CavaProvider"
        accessSemantics: "reference"
        prototype: "caelestia::AudioProvider"
        exports: ["Caelestia.Services/CavaProvider 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "bars"
            type: "int"
            read: "bars"
            write: "setBars"
            notify: "barsChanged"
            index: 0
        }
        Property {
            name: "values"
            type: "double"
            isList: true
            read: "values"
            notify: "valuesChanged"
            index: 1
            isReadonly: true
        }
        Signal { name: "barsChanged" }
        Signal { name: "valuesChanged" }
    }
    Component {
        file: "service.hpp"
        name: "caelestia::Service"
        accessSemantics: "reference"
        prototype: "QObject"
        Property {
            name: "refCount"
            type: "int"
            read: "refCount"
            notify: "refCountChanged"
            index: 0
            isReadonly: true
        }
        Signal { name: "refCountChanged" }
    }
    Component {
        file: "serviceref.hpp"
        name: "caelestia::ServiceRef"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Caelestia.Services/ServiceRef 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "service"
            type: "Service"
            isPointer: true
            read: "service"
            write: "setService"
            notify: "serviceChanged"
            index: 0
        }
        Signal { name: "serviceChanged" }
    }
}
