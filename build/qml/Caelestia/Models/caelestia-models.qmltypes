import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "qabstractitemmodel.h"
        name: "QAbstractItemModel"
        accessSemantics: "reference"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: [
                "NoLayoutChangeHint",
                "VerticalSortHint",
                "HorizontalSortHint"
            ]
        }
        Enum {
            name: "CheckIndexOption"
            isScoped: true
            values: [
                "NoOption",
                "IndexIsValid",
                "DoNotUseParent",
                "ParentIsInvalid"
            ]
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "int"; isList: true }
        }
        Signal {
            name: "dataChanged"
            isCloned: true
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QPersistentModelIndex"; isList: true }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            isCloned: true
            Parameter { name: "parents"; type: "QPersistentModelIndex"; isList: true }
        }
        Signal { name: "layoutChanged"; isCloned: true }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QPersistentModelIndex"; isList: true }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            isCloned: true
            Parameter { name: "parents"; type: "QPersistentModelIndex"; isList: true }
        }
        Signal { name: "layoutAboutToBeChanged"; isCloned: true }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method { name: "resetInternalData" }
        Method {
            name: "hasIndex"
            type: "bool"
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            isMethodConstant: true
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            isMethodConstant: true
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int"; isCloned: true; isMethodConstant: true }
        Method {
            name: "columnCount"
            type: "int"
            isMethodConstant: true
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int"; isCloned: true; isMethodConstant: true }
        Method {
            name: "hasChildren"
            type: "bool"
            isMethodConstant: true
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool"; isCloned: true; isMethodConstant: true }
        Method {
            name: "data"
            type: "QVariant"
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            isCloned: true
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            isMethodConstant: true
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "insertRows"
            revision: 1540
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "count"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "insertRows"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "insertColumns"
            revision: 1540
            type: "bool"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "count"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "insertColumns"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "column"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "removeRows"
            revision: 1540
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "count"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "removeRows"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "row"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "removeColumns"
            revision: 1540
            type: "bool"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "count"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "removeColumns"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "column"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "moveRows"
            revision: 1540
            type: "bool"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceRow"; type: "int" }
            Parameter { name: "count"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationChild"; type: "int" }
        }
        Method {
            name: "moveColumns"
            revision: 1540
            type: "bool"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceColumn"; type: "int" }
            Parameter { name: "count"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationChild"; type: "int" }
        }
        Method {
            name: "insertRow"
            revision: 1540
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "insertRow"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "insertColumn"
            revision: 1540
            type: "bool"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "insertColumn"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "removeRow"
            revision: 1540
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "removeRow"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "removeColumn"
            revision: 1540
            type: "bool"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "removeColumn"
            revision: 1540
            type: "bool"
            isCloned: true
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "moveRow"
            revision: 1540
            type: "bool"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceRow"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationChild"; type: "int" }
        }
        Method {
            name: "moveColumn"
            revision: 1540
            type: "bool"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceColumn"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationChild"; type: "int" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            isMethodConstant: true
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "sort"
            revision: 1540
            Parameter { name: "column"; type: "int" }
            Parameter { name: "order"; type: "Qt::SortOrder" }
        }
        Method {
            name: "sort"
            revision: 1540
            isCloned: true
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            isMethodConstant: true
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        file: "qabstractitemmodel.h"
        name: "QAbstractListModel"
        accessSemantics: "reference"
        prototype: "QAbstractItemModel"
    }
    Component {
        file: "filesystemmodel.hpp"
        name: "caelestia::FileSystemEntry"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Caelestia.Models/FileSystemEntry 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [256]
        Property {
            name: "path"
            type: "QString"
            read: "path"
            index: 0
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "relativePath"
            type: "QString"
            read: "relativePath"
            index: 1
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "name"
            type: "QString"
            read: "name"
            index: 2
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "baseName"
            type: "QString"
            read: "baseName"
            index: 3
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "parentDir"
            type: "QString"
            read: "parentDir"
            index: 4
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "suffix"
            type: "QString"
            read: "suffix"
            index: 5
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "size"
            type: "qlonglong"
            read: "size"
            index: 6
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "isDir"
            type: "bool"
            read: "isDir"
            index: 7
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "isImage"
            type: "bool"
            read: "isImage"
            index: 8
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "mimeType"
            type: "QString"
            read: "mimeType"
            index: 9
            isReadonly: true
            isPropertyConstant: true
        }
    }
    Component {
        file: "filesystemmodel.hpp"
        name: "caelestia::FileSystemModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["Caelestia.Models/FileSystemModel 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Filter"
            values: ["NoFilter", "Images", "Files", "Dirs"]
        }
        Property {
            name: "path"
            type: "QString"
            read: "path"
            write: "setPath"
            notify: "pathChanged"
            index: 0
        }
        Property {
            name: "recursive"
            type: "bool"
            read: "recursive"
            write: "setRecursive"
            notify: "recursiveChanged"
            index: 1
        }
        Property {
            name: "watchChanges"
            type: "bool"
            read: "watchChanges"
            write: "setWatchChanges"
            notify: "watchChangesChanged"
            index: 2
        }
        Property {
            name: "showHidden"
            type: "bool"
            read: "showHidden"
            write: "setShowHidden"
            notify: "showHiddenChanged"
            index: 3
        }
        Property {
            name: "sortReverse"
            type: "bool"
            read: "sortReverse"
            write: "setSortReverse"
            notify: "sortReverseChanged"
            index: 4
        }
        Property {
            name: "filter"
            type: "Filter"
            read: "filter"
            write: "setFilter"
            notify: "filterChanged"
            index: 5
        }
        Property {
            name: "nameFilters"
            type: "QStringList"
            read: "nameFilters"
            write: "setNameFilters"
            notify: "nameFiltersChanged"
            index: 6
        }
        Property {
            name: "entries"
            type: "QList<FileSystemEntry*>"
            read: "entries"
            notify: "entriesChanged"
            index: 7
            isReadonly: true
        }
        Signal { name: "pathChanged" }
        Signal { name: "recursiveChanged" }
        Signal { name: "watchChangesChanged" }
        Signal { name: "showHiddenChanged" }
        Signal { name: "sortReverseChanged" }
        Signal { name: "filterChanged" }
        Signal { name: "nameFiltersChanged" }
        Signal { name: "entriesChanged" }
        Signal {
            name: "added"
            Parameter { name: "entry"; type: "FileSystemEntry"; isPointer: true; isTypeConstant: true }
        }
        Signal {
            name: "removed"
            Parameter { name: "path"; type: "QString" }
        }
    }
}
