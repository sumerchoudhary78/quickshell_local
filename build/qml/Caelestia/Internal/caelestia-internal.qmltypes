import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "cachingimagemanager.hpp"
        name: "caelestia::CachingImageManager"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Caelestia.Internal/CachingImageManager 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "item"
            type: "QQuickItem"
            isPointer: true
            read: "item"
            write: "setItem"
            notify: "itemChanged"
            index: 0
            isRequired: true
        }
        Property {
            name: "cacheDir"
            type: "QUrl"
            read: "cacheDir"
            write: "setCacheDir"
            notify: "cacheDirChanged"
            index: 1
            isRequired: true
        }
        Property {
            name: "path"
            type: "QString"
            read: "path"
            write: "setPath"
            notify: "pathChanged"
            index: 2
        }
        Property {
            name: "cachePath"
            type: "QUrl"
            read: "cachePath"
            notify: "cachePathChanged"
            index: 3
            isReadonly: true
        }
        Signal { name: "itemChanged" }
        Signal { name: "cacheDirChanged" }
        Signal { name: "pathChanged" }
        Signal { name: "cachePathChanged" }
        Signal { name: "usingCacheChanged" }
        Method { name: "updateSource" }
        Method {
            name: "updateSource"
            Parameter { name: "path"; type: "QString" }
        }
    }
    Component {
        file: "circularindicatormanager.hpp"
        name: "caelestia::CircularIndicatorManager"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Caelestia.Internal/CircularIndicatorManager 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "IndeterminateAnimationType"
            values: ["Advance", "Retreat"]
        }
        Property {
            name: "startFraction"
            type: "double"
            read: "startFraction"
            notify: "startFractionChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "endFraction"
            type: "double"
            read: "endFraction"
            notify: "endFractionChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "rotation"
            type: "double"
            read: "rotation"
            notify: "rotationChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "progress"
            type: "double"
            read: "progress"
            write: "setProgress"
            notify: "progressChanged"
            index: 3
        }
        Property {
            name: "completeEndProgress"
            type: "double"
            read: "completeEndProgress"
            write: "setCompleteEndProgress"
            notify: "completeEndProgressChanged"
            index: 4
        }
        Property {
            name: "duration"
            type: "double"
            read: "duration"
            notify: "indeterminateAnimationTypeChanged"
            index: 5
            isReadonly: true
        }
        Property {
            name: "completeEndDuration"
            type: "double"
            read: "completeEndDuration"
            notify: "indeterminateAnimationTypeChanged"
            index: 6
            isReadonly: true
        }
        Property {
            name: "indeterminateAnimationType"
            type: "IndeterminateAnimationType"
            read: "indeterminateAnimationType"
            write: "setIndeterminateAnimationType"
            notify: "indeterminateAnimationTypeChanged"
            index: 7
        }
        Signal { name: "startFractionChanged" }
        Signal { name: "endFractionChanged" }
        Signal { name: "rotationChanged" }
        Signal { name: "progressChanged" }
        Signal { name: "completeEndProgressChanged" }
        Signal { name: "indeterminateAnimationTypeChanged" }
    }
}
